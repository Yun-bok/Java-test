package test1;

public class test {
	public static void main(String[] args) {
		//최소한 요약
		//변수
		//-> 어떤 데이터를 담는 메모리 공간
		/*-> 두개이상의 데이터를 저장 불가(한개의값)
		 * 기본타입(어떠한 값을저장), 참조타입((주소값)-값에 접근을 위함)
		 * 기본타입 int, float , double, char, short등 - 책보고
		 * 
		 * 선언 -> 메모리공간에 변수이름을 가지는 공간을 만드는것
		 *변수타입 변수이름; ->이렇게 쓰면 변수이름에 대한공간 생성됨
		 *선언과 동시에 초기화(변수의 값을 최초로 저장해주는 것)
		 */
		 int	int_value = 10; // <- 선언과 동시에 초기화
		 
		 //변수 값저장 이런식으로
		 //int_value = 20;
		 
		 int val = int_value;
		 //변수의 사용
		 //변수가 좌측 - > 일반적으로 값 변경 or 저장
		 //변수가 우측 - > 일반적으로 값 가져오기
		 
		 System.out.println(val);
		 
		 //참조타입 - 클래스,인터페이스,배열,열거
		 //-> 타입 ->주소값을 가지는 타입
		 
		 //연산자
		 
		 // 건너뜀 
		 
		 /*
		  * 
		  */
		 
		 //제어문 -> 조건,반복
		 //조건 -> if , switch
		 // if(	  조건식   ) {실행블록} 조건식이 참이면 -> 실행블록 실행 , 거짓이면 X
		 //else if{}   else   ->  위에 조건이 거짓일때 다른조건 확인
		 // else{ }  -> 위에 조건들이 거짓일때 (만족하지 않을때) 실행
		 
		 //반복 -> for, while , do while 
		 //for(  초기값,  조건식 ,  증감식)
		 //->(일반적)  초기값이 -> 조건식을 만족하는지 체크 -> 증감식으로 -> 조건식이 거짓이 되게끔
		 //-> 초기값이 증감식으로 인해 조건식을 불만족시킬때까지 반복
		 //-> 초기값(변수값 설정) -> 조건식이 만족 - > 만족(true) -> 반복
		 //-> 증감식(변수값 변경) -> 조건식 체크 -> 만족 ->반복
		 //							     -> 거짓 ->반복중지
		 //
		 
		 
		 //반복 -> 응용 : 연습  ,  기본 이론 : 알고있어야한다
		 //남이 만든 반복문은 이해 할 수 있어야한다
		 //-> 내가 노가다로 반복을 실행
		 for(int i=0; i<5; i++) { // 반복은 노가다 필요
			 //위 흐름에 따르자면 
			 //i=0 이고 i<5  = 0<5 -> 참 -> 실행
			 //0출력
		   	 //i=1 이고 i<3  = 1<3 -> 참 -> 실행
			 //1출력
			//i=3 이고 i<3  = 3<3 -> 거짓 -> 실행XX
			 for(int j = i; j<2; j++) {
				 // i = 0  j 0  0<2 -> 참 -> 실행
				 // 0출력
				 
			 }
			 System.out.println(i);
		 }
		 //메서드
		 //int result = Exam();
		 //int result = 우측값이 들어감
		 //				Exam()메서드 return 값;
		 //				  값;
		 //				  1;
		 
		 
		//클래스 사용
			testclass test1 = new testclass(10);
			test1.print();
			
		 //순서 상관없이 중요한거 정리
		 
		 //변수와 메서드 static -> 끼리끼리 논다 ->main에서 호출되는 변수나 메소드는 static
		 // 있는데서 써야하고 없는데서 안쓰면된다
		 //static -> 스태틱을쓰면 -> 클래스.변수명, 클래스.메소드명() 호출
		 //ㄴ> 없으면? -> 클래스 객체(변수)명.멤버변수명 , 클래스객체명.메소드명() 호출
		 
		 //메서드 -> 클래스 -> 기능담당
		 //	      접근지정   반환타입   메서드명 ( 매개변수들   ){ }
		 
		 //static public void Exam() { //어떤 기능 동작 -> 결과값 돌려주는 메소드
			// return 1;
			 
		 }
	//반환타입
	//-void -> 반환값이 없는 친구 -> return; 반환값이 없는데 리턴은 => 메서드 종료를 의미
	//나머지타입  ->  return시에 타입만 일치 하면된다
	//반환타입 ->어떠한 데이터를 돌려줄것이다
  		 
	//매개변수
	//외부에서 전달받아서 메서드 안에서 사용할 변수
	//(  타입 이름 , 타입  이름 ) , 로 여러개 사용할수있다
	
	//여기에서 공부를 할때 이론쭉읽어보고
	//이론 -> 한번 쭉 읽고 -> 외운다?X ->익숙해진다
	//어떤 알고리즘 (문제-> 논리절차) 공부보단 	      -> 대기업 , 중견, 공기업(주로 유지보수 하청과의 문제)
	//어떠한 주제를 가지고 프로젝트 -> 습득시간이 빠르다    -> 중소기업(코딩이재밌으면 중소 개발팀 등 보통은 유지보수나 회화다)
	//->클래스 , 반복 , 조건 , 메서드 -> 나올때마다 한번씩 공부
	
	//영어와 똑같다 
	//죽어라 영어 문법 단어? 외우면 시험은 잘치지만 회화는 못한다
	//
	
	
	}

//클래스
//class 클래스명{   }       -    클래스명으로 멤버 변수, 멤버메서드를 묶는거 라고 생각
class testclass{
	int num;
	String name;
	
	//생성자에서 멤버변수들의 값을 할당
	testclass(int num){
		this.num = num;
		name = "테스트";
	}
	
	public void print() {
		System.out.println(num+", "+name);
	}
	
}

